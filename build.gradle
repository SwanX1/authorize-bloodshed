buildscript {
  repositories {
    maven { url = 'https://maven.minecraftforge.net' }
    maven { url = 'https://repo.spongepowered.org/maven' }
    mavenCentral()
  }

  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.0.+', changing: true
    classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
  }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'


// This initializes the config. Please try to modify the variables in the config file, if needed, add more if you see a reason to.
ext.config = parseConfig(file('build.properties'))

version = config.VERSION
group = "${config.GROUP}.${config.ARTIFACT}"
archivesBaseName = "${config.ARCHIVES_BASE_NAME}-${config.MINECRAFT_VERSION}"

compileJava.options.encoding = "UTF-8"
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
  mappings channel: config.MAPPINGS_CHANNEL, version: config.MAPPINGS_VERSION
  copyIdeResources = true
  runs {
    configureEach {
      workingDirectory project.file('run')

      arg "-mixin.config=${config.ARTIFACT}.mixins.json"
      property 'forge.logging.markers', ''
      property 'forge.logging.console.level', 'debug'
      property 'forge.enabledGameTestNamespaces', config.MOD_ID

      mods {
        "${config.MOD_ID}" {
          source sourceSets.main
        }
      }
    }

    client {}

    server {
      args '--nogui'
    }

    data {
      workingDirectory project.file('run-data')
      args '--mod', config.MOD_ID, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
    }
  }
}

// sourceSets.main.resources { srcDir 'src/generated/resources' }
sourceSets.test.java.srcDirs = [] // Don't generate src/test/java
sourceSets.test.resources.srcDirs = [] // Don't generate src/test/resources

configurations {
  packIntoJar {
    transitive = false
  }
}

repositories {
  maven {
    url 'https://www.cursemaven.com'
    content {
      includeGroup 'curse.maven'
    }
  }

  maven {
    url "https://maven.infernalstudios.org/${config.CONFIG_VERSION.endsWith('SNAPSHOT') ? 'snapshots' : 'releases'}"
    content {
      includeGroup 'org.infernalstudios'
    }
  }
}

dependencies {
  minecraft "net.minecraftforge:forge:${config.MINECRAFT_VERSION}-${config.FORGE_VERSION}"

  implementation(jarJar("org.infernalstudios:config:${config.CONFIG_VERSION}")) {
    jarJar.ranged(it, "[${config.CONFIG_VERSION},)")
  }
  
  // Dev only
  implementation fg.deobf("curse.maven:not-enough-crashes-forge-442354:4684047")
  implementation fg.deobf("curse.maven:spark-361579:4738952")

  annotationProcessor "org.spongepowered:mixin:${config.MIXIN_VERSION}:processor"

  compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.5"))
  implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.3.5")) {
    jarJar.ranged(it, "[0.3.5,)")
  }
}

mixin {
  add sourceSets.main, "${config.ARTIFACT}.refmap.json"
}

jar {
  archiveClassifier = 'base'
  finalizedBy 'reobfJar'
  manifest {
    attributes([
      'Specification-Title'   : config.TITLE,
      'Specification-Vendor'  : config.AUTHOR,
      'Specification-Version' : '1',
      'Implementation-Title'  : config.TITLE,
      'Implementation-Version': config.VERSION,
      'Implementation-Vendor' : config.AUTHOR,
      'MixinConfigs'          : "${config.ARTIFACT}.mixins.json",
    ])
  }
}

task sourcesJar(type: Jar) {
  archiveClassifier = 'sources'
  from sourceSets.main.allJava
}

tasks.build.dependsOn sourcesJar

// Config parse function
def parseConfig(File config) {
  config.withReader {
    def prop = new Properties()
    prop.load(it)
    return new ConfigSlurper().parse(prop)
  }
}
